/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ServerUI.java
 *
 * Created on May 22, 2012, 8:33:09 AM
 */

package com.cb.chitchat.server;

import java.awt.event.WindowAdapter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author mangoesmobile
 */
public class ServerUI extends javax.swing.JDialog implements ServerDelegate {

    Server myServer;
    ServerUI context;
    /** Creates new form ServerUI */
    public ServerUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myServer=null;
        context=this;
        this.initWindowListener();
    }
    /**
     * Confirmation of exit.
     */
    private void initWindowListener() {
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(java.awt.event.WindowEvent event) {
                int ret = JOptionPane.showConfirmDialog(context, "Are you sure?", "Confirm exit...", JOptionPane.YES_NO_OPTION);
                if (ret == JOptionPane.YES_OPTION) {
                    //fire stop event in myServer.
                    myServer.stopEventFired();
                    context.dispose();
                    //notify all clients here.
                    System.exit(0);
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        portNumberField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Set up the server...");
        setResizable(false);

        jLabel1.setText("Enter a port number(e.g.12345)");

        startButton.setText("Start...");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop...");
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        statusArea.setColumns(20);
        statusArea.setEditable(false);
        statusArea.setRows(5);
        jScrollPane1.setViewportView(statusArea);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(jLabel1)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(portNumberField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                            .add(stopButton)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                            .add(startButton))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(portNumberField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(startButton)
                    .add(stopButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 181, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        String port= this.portNumberField.getText().trim();
        boolean serverCreationFailed=false;
        if(port.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please enter a port number!", "Error...", JOptionPane.ERROR_MESSAGE);
        }
        else{
            final int portNum=Integer.parseInt(port);
            try {
                    myServer = new Server(portNum, context);
                    Thread thread=new Thread(myServer);
                    thread.start();

                } catch (Exception ex) {
                    serverCreationFailed=true;
                    JOptionPane.showMessageDialog(context, "Failed to create server instance."+ex.getMessage()+".", "Error...", JOptionPane.ERROR_MESSAGE);
                }

            this.updateUIStates(serverCreationFailed);
            

         }
    }//GEN-LAST:event_startButtonActionPerformed
    /**
     * Updates UI states for different controls.
     * @param flag True to enable start button,else otherwise.
     */
    private void updateUIStates(boolean flag)
    {
        if(!flag)
            {
                //server is created and running.enable the stop button.
                this.stopButton.setEnabled(true);
                this.startButton.setEnabled(false);
                this.portNumberField.setEnabled(false);
            }
        else
        {
            this.stopButton.setEnabled(false);
            this.startButton.setEnabled(true);
            this.portNumberField.setEnabled(true);
        }
    }
    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
        if(!myServer.isClosed())
        {
            try {
                this.myServer.stop();
                this.updateUIStates(true);
            } catch (IOException ex) {
                Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_stopButtonActionPerformed
    //inform the clients and do some house keeping as server is going down
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField portNumberField;
    private javax.swing.JButton startButton;
    private javax.swing.JTextArea statusArea;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables

    public void updateStatus(String text) {
        this.statusArea.append(text+"\n");
    }

    public void updateStopButtonState(boolean flag) {
        this.stopButton.setEnabled(flag);
    }

}
