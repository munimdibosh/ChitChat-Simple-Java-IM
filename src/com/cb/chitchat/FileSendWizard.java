/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileSendWizard.java
 *
 * Created on May 28, 2012, 12:54:19 AM
 */

package com.cb.chitchat;

import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author mangoesmobile
 */
public class FileSendWizard extends javax.swing.JFrame implements FileTransferUpdateDelegate {

    FileTransferDelegate delegate;
    ArrayList<String> users=new ArrayList<String>();
    DefaultListModel listModel;
    int byteArraySize=8;
    String selectedUser;
    /** Creates new form FileSendWizard */
    public FileSendWizard(FileTransferDelegate del,ArrayList<String> users ) {
        initComponents();
        if(!this.users.isEmpty())
        {
           this.users.clear();
        }
        this.users.addAll(users);
        
        this.delegate=del;
        this.initListFactors();
    }
    private void initListFactors()
    {
        //init the listModel
        this.listModel=new DefaultListModel();
        this.userList.setModel(listModel);
        //Create a custom list cell renderer and set it to list box
        this.userList.setCellRenderer(new OnlineUserCellRenderer());
        //double click handler
        MouseListener mouseListener = new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                selectedUser=users.get(userList.getSelectedIndex());
             }
         };
        this.userList.addMouseListener(mouseListener);
        for(String user : this.users)
             this.listModel.addElement(user);
    }

    public void progress(int n) {
        
    }

    public void finished() {
        this.setVisible(false);
        this.dispose();
    }
    //<editor-fold desc="ListView custom cell renderer">
    class OnlineUserCellRenderer extends JLabel implements ListCellRenderer {
        final  ImageIcon userIcon = new ImageIcon("images/icons/user.png");

         // This is the only method defined by ListCellRenderer.
         // We just reconfigure the JLabel each time it's called.

        public Component getListCellRendererComponent(
           JList list,
           Object value,            // value to display
           int index,               // cell index
           boolean isSelected,      // is the cell selected
           boolean cellHasFocus)    // the list and the cell have the focus
           {
             String s = value.toString();
             setText(s);
             setIcon(userIcon);
               if (isSelected) {
                 setBackground(list.getSelectionBackground());
                   setForeground(list.getSelectionForeground());
               }
             else {
                   setBackground(list.getBackground());
                   setForeground(list.getForeground());
               }
               setEnabled(list.isEnabled());
               setFont(list.getFont());
             setOpaque(true);
             return this;
         }
    }

    //</editor-fold>

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectedFilePath = new javax.swing.JTextField();
        selectFileButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("File sending wizard...");
        setResizable(false);

        selectedFilePath.setEditable(false);
        selectedFilePath.setForeground(new java.awt.Color(51, 51, 51));
        selectedFilePath.setText("selected file...");

        selectFileButton.setText("select...");
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setText("Select a file and double click on any user to send it.");

        jScrollPane1.setViewportView(userList);

        jLabel2.setText("Don't close this until the sending completes...");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(selectFileButton)
                            .add(selectedFilePath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(24, 24, 24)
                                .add(jLabel2))
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabel1)
                .add(3, 3, 3)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(90, 90, 90)
                        .add(selectedFilePath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(selectFileButton))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(35, 35, 35)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 221, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileButtonActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc=new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int ret=fc.showOpenDialog(this);
        if(ret==JFileChooser.APPROVE_OPTION)
        {
            File file=fc.getSelectedFile();
            //
            this.selectedFilePath.setText(file.getPath());
            this.selectedFilePath.setToolTipText(file.getPath());
            //
            this.delegate.file(file,this.selectedUser,this);

        }
    }//GEN-LAST:event_selectFileButtonActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton selectFileButton;
    private javax.swing.JTextField selectedFilePath;
    private javax.swing.JList userList;
    // End of variables declaration//GEN-END:variables

}
